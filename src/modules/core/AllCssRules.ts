import { Property, Globals } from "csstype"
import { CSSProperties } from "react"

export type StyledElementCSSProps = Partial<CSSProperties>;

class AllCssRules implements Required<CSSProperties> {
    accentColor: Property.AccentColor = "" as any
    alignContent: Property.AlignContent = "" as any
    alignItems: Property.AlignItems = "" as any
    alignSelf: Property.AlignSelf = "" as any
    alignTracks: Property.AlignTracks = "" as any
    animationComposition: Property.AnimationComposition = "" as any
    animationDelay: Property.AnimationDelay<string & {}> = "" as any
    animationDirection: Property.AnimationDirection = "" as any
    animationDuration: Property.AnimationDuration<string & {}> = "" as any
    animationFillMode: Property.AnimationFillMode = "" as any
    animationIterationCount: Property.AnimationIterationCount = "" as any
    animationName: Property.AnimationName = "" as any
    animationPlayState: Property.AnimationPlayState = "" as any
    animationTimeline: Property.AnimationTimeline = "" as any
    animationTimingFunction: Property.AnimationTimingFunction = "" as any
    appearance: Property.Appearance = "" as any
    aspectRatio: Property.AspectRatio = "" as any
    backdropFilter: Property.BackdropFilter = "" as any
    backfaceVisibility: Property.BackfaceVisibility = "" as any
    backgroundAttachment: Property.BackgroundAttachment = "" as any
    backgroundBlendMode: Property.BackgroundBlendMode = "" as any
    backgroundClip: Property.BackgroundClip = "" as any
    backgroundColor: Property.BackgroundColor = "" as any
    backgroundImage: Property.BackgroundImage = "" as any
    backgroundOrigin: Property.BackgroundOrigin = "" as any
    backgroundPositionX: Property.BackgroundPositionX<string | number> = "" as any
    backgroundPositionY: Property.BackgroundPositionY<string | number> = "" as any
    backgroundRepeat: Property.BackgroundRepeat = "" as any
    backgroundSize: Property.BackgroundSize<string | number> = "" as any
    blockOverflow: Property.BlockOverflow = "" as any
    blockSize: Property.BlockSize<string | number> = "" as any
    borderBlockColor: Property.BorderBlockColor = "" as any
    borderBlockEndColor: Property.BorderBlockEndColor = "" as any
    borderBlockEndStyle: Property.BorderBlockEndStyle = "" as any
    borderBlockEndWidth: Property.BorderBlockEndWidth<string | number> = "" as any
    borderBlockStartColor: Property.BorderBlockStartColor = "" as any
    borderBlockStartStyle: Property.BorderBlockStartStyle = "" as any
    borderBlockStartWidth: Property.BorderBlockStartWidth<string | number> = "" as any
    borderBlockStyle: Property.BorderBlockStyle = "" as any
    borderBlockWidth: Property.BorderBlockWidth<string | number> = "" as any
    borderBottomColor: Property.BorderBottomColor = "" as any
    borderBottomLeftRadius: Property.BorderBottomLeftRadius<string | number> = "" as any
    borderBottomRightRadius: Property.BorderBottomRightRadius<string | number> = "" as any
    borderBottomStyle: Property.BorderBottomStyle = "" as any
    borderBottomWidth: Property.BorderBottomWidth<string | number> = "" as any
    borderCollapse: Property.BorderCollapse = "" as any
    borderEndEndRadius: Property.BorderEndEndRadius<string | number> = "" as any
    borderEndStartRadius: Property.BorderEndStartRadius<string | number> = "" as any
    borderImageOutset: Property.BorderImageOutset<string | number> = "" as any
    borderImageRepeat: Property.BorderImageRepeat = "" as any
    borderImageSlice: Property.BorderImageSlice = "" as any
    borderImageSource: Property.BorderImageSource = "" as any
    borderImageWidth: Property.BorderImageWidth<string | number> = "" as any
    borderInlineColor: Property.BorderInlineColor = "" as any
    borderInlineEndColor: Property.BorderInlineEndColor = "" as any
    borderInlineEndStyle: Property.BorderInlineEndStyle = "" as any
    borderInlineEndWidth: Property.BorderInlineEndWidth<string | number> = "" as any
    borderInlineStartColor: Property.BorderInlineStartColor = "" as any
    borderInlineStartStyle: Property.BorderInlineStartStyle = "" as any
    borderInlineStartWidth: Property.BorderInlineStartWidth<string | number> = "" as any
    borderInlineStyle: Property.BorderInlineStyle = "" as any
    borderInlineWidth: Property.BorderInlineWidth<string | number> = "" as any
    borderLeftColor: Property.BorderLeftColor = "" as any
    borderLeftStyle: Property.BorderLeftStyle = "" as any
    borderLeftWidth: Property.BorderLeftWidth<string | number> = "" as any
    borderRightColor: Property.BorderRightColor = "" as any
    borderRightStyle: Property.BorderRightStyle = "" as any
    borderRightWidth: Property.BorderRightWidth<string | number> = "" as any
    borderSpacing: Property.BorderSpacing<string | number> = "" as any
    borderStartEndRadius: Property.BorderStartEndRadius<string | number> = "" as any
    borderStartStartRadius: Property.BorderStartStartRadius<string | number> = "" as any
    borderTopColor: Property.BorderTopColor = "" as any
    borderTopLeftRadius: Property.BorderTopLeftRadius<string | number> = "" as any
    borderTopRightRadius: Property.BorderTopRightRadius<string | number> = "" as any
    borderTopStyle: Property.BorderTopStyle = "" as any
    borderTopWidth: Property.BorderTopWidth<string | number> = "" as any
    bottom: Property.Bottom<string | number> = "" as any
    boxDecorationBreak: Property.BoxDecorationBreak = "" as any
    boxShadow: Property.BoxShadow = "" as any
    boxSizing: Property.BoxSizing = "" as any
    breakAfter: Property.BreakAfter = "" as any
    breakBefore: Property.BreakBefore = "" as any
    breakInside: Property.BreakInside = "" as any
    captionSide: Property.CaptionSide = "" as any
    caretColor: Property.CaretColor = "" as any
    caretShape: Property.CaretShape = "" as any
    clear: Property.Clear = "" as any
    clipPath: Property.ClipPath = "" as any
    color: Property.Color = "" as any
    colorAdjust: Property.PrintColorAdjust = "" as any
    colorScheme: Property.ColorScheme = "" as any
    columnCount: Property.ColumnCount = "" as any
    columnFill: Property.ColumnFill = "" as any
    columnGap: Property.ColumnGap<string | number> = "" as any
    columnRuleColor: Property.ColumnRuleColor = "" as any
    columnRuleStyle: Property.ColumnRuleStyle = "" as any
    columnRuleWidth: Property.ColumnRuleWidth<string | number> = "" as any
    columnSpan: Property.ColumnSpan = "" as any
    columnWidth: Property.ColumnWidth<string | number> = "" as any
    contain: Property.Contain = "" as any
    containIntrinsicBlockSize: Property.ContainIntrinsicBlockSize<string | number> = "" as any
    containIntrinsicHeight: Property.ContainIntrinsicHeight<string | number> = "" as any
    containIntrinsicInlineSize: Property.ContainIntrinsicInlineSize<string | number> = "" as any
    containIntrinsicWidth: Property.ContainIntrinsicWidth<string | number> = "" as any
    containerName: Property.ContainerName = "" as any
    containerType: Property.ContainerType = "" as any
    content: Property.Content = "" as any
    contentVisibility: Property.ContentVisibility = "" as any
    counterIncrement: Property.CounterIncrement = "" as any
    counterReset: Property.CounterReset = "" as any
    counterSet: Property.CounterSet = "" as any
    cursor: Property.Cursor = "" as any
    direction: Property.Direction = "" as any
    display: Property.Display = "" as any
    emptyCells: Property.EmptyCells = "" as any
    filter: Property.Filter = "" as any
    flexBasis: Property.FlexBasis<string | number> = "" as any
    flexDirection: Property.FlexDirection = "" as any
    flexGrow: Property.FlexGrow = "" as any
    flexShrink: Property.FlexShrink = "" as any
    flexWrap: Property.FlexWrap = "" as any
    float: Property.Float = "" as any
    fontFamily: Property.FontFamily = "" as any
    fontFeatureSettings: Property.FontFeatureSettings = "" as any
    fontKerning: Property.FontKerning = "" as any
    fontLanguageOverride: Property.FontLanguageOverride = "" as any
    fontOpticalSizing: Property.FontOpticalSizing = "" as any
    fontPalette: Property.FontPalette = "" as any
    fontSize: Property.FontSize<string | number> = "" as any
    fontSizeAdjust: Property.FontSizeAdjust = "" as any
    fontSmooth: Property.FontSmooth<string | number> = "" as any
    fontStretch: Property.FontStretch = "" as any
    fontStyle: Property.FontStyle = "" as any
    fontSynthesis: Property.FontSynthesis = "" as any
    fontVariant: Property.FontVariant = "" as any
    fontVariantAlternates: Property.FontVariantAlternates = "" as any
    fontVariantCaps: Property.FontVariantCaps = "" as any
    fontVariantEastAsian: Property.FontVariantEastAsian = "" as any
    fontVariantEmoji: Property.FontVariantEmoji = "" as any
    fontVariantLigatures: Property.FontVariantLigatures = "" as any
    fontVariantNumeric: Property.FontVariantNumeric = "" as any
    fontVariantPosition: Property.FontVariantPosition = "" as any
    fontVariationSettings: Property.FontVariationSettings = "" as any
    fontWeight: Property.FontWeight = "" as any
    forcedColorAdjust: Property.ForcedColorAdjust = "" as any
    gridAutoColumns: Property.GridAutoColumns<string | number> = "" as any
    gridAutoFlow: Property.GridAutoFlow = "" as any
    gridAutoRows: Property.GridAutoRows<string | number> = "" as any
    gridColumnEnd: Property.GridColumnEnd = "" as any
    gridColumnStart: Property.GridColumnStart = "" as any
    gridRowEnd: Property.GridRowEnd = "" as any
    gridRowStart: Property.GridRowStart = "" as any
    gridTemplateAreas: Property.GridTemplateAreas = "" as any
    gridTemplateColumns: Property.GridTemplateColumns<string | number> = "" as any
    gridTemplateRows: Property.GridTemplateRows<string | number> = "" as any
    hangingPunctuation: Property.HangingPunctuation = "" as any
    height: Property.Height<string | number> = "" as any
    hyphenateCharacter: Property.HyphenateCharacter = "" as any
    hyphenateLimitChars: Property.HyphenateLimitChars = "" as any
    hyphens: Property.Hyphens = "" as any
    imageOrientation: Property.ImageOrientation = "" as any
    imageRendering: Property.ImageRendering = "" as any
    imageResolution: Property.ImageResolution = "" as any
    initialLetter: Property.InitialLetter = "" as any
    inlineSize: Property.InlineSize<string | number> = "" as any
    inputSecurity: Property.InputSecurity = "" as any
    insetBlockEnd: Property.InsetBlockEnd<string | number> = "" as any
    insetBlockStart: Property.InsetBlockStart<string | number> = "" as any
    insetInlineEnd: Property.InsetInlineEnd<string | number> = "" as any
    insetInlineStart: Property.InsetInlineStart<string | number> = "" as any
    isolation: Property.Isolation = "" as any
    justifyContent: Property.JustifyContent = "" as any
    justifyItems: Property.JustifyItems = "" as any
    justifySelf: Property.JustifySelf = "" as any
    justifyTracks: Property.JustifyTracks = "" as any
    left: Property.Left<string | number> = "" as any
    letterSpacing: Property.LetterSpacing<string | number> = "" as any
    lineBreak: Property.LineBreak = "" as any
    lineHeight: Property.LineHeight<string | number> = "" as any
    lineHeightStep: Property.LineHeightStep<string | number> = "" as any
    listStyleImage: Property.ListStyleImage = "" as any
    listStylePosition: Property.ListStylePosition = "" as any
    listStyleType: Property.ListStyleType = "" as any
    marginBlockEnd: Property.MarginBlockEnd<string | number> = "" as any
    marginBlockStart: Property.MarginBlockStart<string | number> = "" as any
    marginBottom: Property.MarginBottom<string | number> = "" as any
    marginInlineEnd: Property.MarginInlineEnd<string | number> = "" as any
    marginInlineStart: Property.MarginInlineStart<string | number> = "" as any
    marginLeft: Property.MarginLeft<string | number> = "" as any
    marginRight: Property.MarginRight<string | number> = "" as any
    marginTop: Property.MarginTop<string | number> = "" as any
    marginTrim: Property.MarginTrim = "" as any
    maskBorderMode: Property.MaskBorderMode = "" as any
    maskBorderOutset: Property.MaskBorderOutset<string | number> = "" as any
    maskBorderRepeat: Property.MaskBorderRepeat = "" as any
    maskBorderSlice: Property.MaskBorderSlice = "" as any
    maskBorderSource: Property.MaskBorderSource = "" as any
    maskBorderWidth: Property.MaskBorderWidth<string | number> = "" as any
    maskClip: Property.MaskClip = "" as any
    maskComposite: Property.MaskComposite = "" as any
    maskImage: Property.MaskImage = "" as any
    maskMode: Property.MaskMode = "" as any
    maskOrigin: Property.MaskOrigin = "" as any
    maskPosition: Property.MaskPosition<string | number> = "" as any
    maskRepeat: Property.MaskRepeat = "" as any
    maskSize: Property.MaskSize<string | number> = "" as any
    maskType: Property.MaskType = "" as any
    mathDepth: Property.MathDepth = "" as any
    mathShift: Property.MathShift = "" as any
    mathStyle: Property.MathStyle = "" as any
    maxBlockSize: Property.MaxBlockSize<string | number> = "" as any
    maxHeight: Property.MaxHeight<string | number> = "" as any
    maxInlineSize: Property.MaxInlineSize<string | number> = "" as any
    maxLines: Property.MaxLines = "" as any
    maxWidth: Property.MaxWidth<string | number> = "" as any
    minBlockSize: Property.MinBlockSize<string | number> = "" as any
    minHeight: Property.MinHeight<string | number> = "" as any
    minInlineSize: Property.MinInlineSize<string | number> = "" as any
    minWidth: Property.MinWidth<string | number> = "" as any
    mixBlendMode: Property.MixBlendMode = "" as any
    motionDistance: Property.OffsetDistance<string | number> = "" as any
    motionPath: Property.OffsetPath = "" as any
    motionRotation: Property.OffsetRotate = "" as any
    objectFit: Property.ObjectFit = "" as any
    objectPosition: Property.ObjectPosition<string | number> = "" as any
    offsetAnchor: Property.OffsetAnchor<string | number> = "" as any
    offsetDistance: Property.OffsetDistance<string | number> = "" as any
    offsetPath: Property.OffsetPath = "" as any
    offsetPosition: Property.OffsetPosition<string | number> = "" as any
    offsetRotate: Property.OffsetRotate = "" as any
    offsetRotation: Property.OffsetRotate = "" as any
    opacity: Property.Opacity = "" as any
    order: Property.Order = "" as any
    orphans: Property.Orphans = "" as any
    outlineColor: Property.OutlineColor = "" as any
    outlineOffset: Property.OutlineOffset<string | number> = "" as any
    outlineStyle: Property.OutlineStyle = "" as any
    outlineWidth: Property.OutlineWidth<string | number> = "" as any
    overflowAnchor: Property.OverflowAnchor = "" as any
    overflowBlock: Property.OverflowBlock = "" as any
    overflowClipBox: Property.OverflowClipBox = "" as any
    overflowClipMargin: Property.OverflowClipMargin<string | number> = "" as any
    overflowInline: Property.OverflowInline = "" as any
    overflowWrap: Property.OverflowWrap = "" as any
    overflowX: Property.OverflowX = "" as any
    overflowY: Property.OverflowY = "" as any
    overscrollBehaviorBlock: Property.OverscrollBehaviorBlock = "" as any
    overscrollBehaviorInline: Property.OverscrollBehaviorInline = "" as any
    overscrollBehaviorX: Property.OverscrollBehaviorX = "" as any
    overscrollBehaviorY: Property.OverscrollBehaviorY = "" as any
    paddingBlockEnd: Property.PaddingBlockEnd<string | number> = "" as any
    paddingBlockStart: Property.PaddingBlockStart<string | number> = "" as any
    paddingBottom: Property.PaddingBottom<string | number> = "" as any
    paddingInlineEnd: Property.PaddingInlineEnd<string | number> = "" as any
    paddingInlineStart: Property.PaddingInlineStart<string | number> = "" as any
    paddingLeft: Property.PaddingLeft<string | number> = "" as any
    paddingRight: Property.PaddingRight<string | number> = "" as any
    paddingTop: Property.PaddingTop<string | number> = "" as any
    page: Property.Page = "" as any
    pageBreakAfter: Property.PageBreakAfter = "" as any
    pageBreakBefore: Property.PageBreakBefore = "" as any
    pageBreakInside: Property.PageBreakInside = "" as any
    paintOrder: Property.PaintOrder = "" as any
    perspective: Property.Perspective<string | number> = "" as any
    perspectiveOrigin: Property.PerspectiveOrigin<string | number> = "" as any
    pointerEvents: Property.PointerEvents = "" as any
    position: Property.Position = "" as any
    printColorAdjust: Property.PrintColorAdjust = "" as any
    quotes: Property.Quotes = "" as any
    resize: Property.Resize = "" as any
    right: Property.Right<string | number> = "" as any
    rotate: Property.Rotate = "" as any
    rowGap: Property.RowGap<string | number> = "" as any
    rubyAlign: Property.RubyAlign = "" as any
    rubyMerge: Property.RubyMerge = "" as any
    rubyPosition: Property.RubyPosition = "" as any
    scale: Property.Scale = "" as any
    scrollBehavior: Property.ScrollBehavior = "" as any
    scrollMarginBlockEnd: Property.ScrollMarginBlockEnd<string | number> = "" as any
    scrollMarginBlockStart: Property.ScrollMarginBlockStart<string | number> = "" as any
    scrollMarginBottom: Property.ScrollMarginBottom<string | number> = "" as any
    scrollMarginInlineEnd: Property.ScrollMarginInlineEnd<string | number> = "" as any
    scrollMarginInlineStart: Property.ScrollMarginInlineStart<string | number> = "" as any
    scrollMarginLeft: Property.ScrollMarginLeft<string | number> = "" as any
    scrollMarginRight: Property.ScrollMarginRight<string | number> = "" as any
    scrollMarginTop: Property.ScrollMarginTop<string | number> = "" as any
    scrollPaddingBlockEnd: Property.ScrollPaddingBlockEnd<string | number> = "" as any
    scrollPaddingBlockStart: Property.ScrollPaddingBlockStart<string | number> = "" as any
    scrollPaddingBottom: Property.ScrollPaddingBottom<string | number> = "" as any
    scrollPaddingInlineEnd: Property.ScrollPaddingInlineEnd<string | number> = "" as any
    scrollPaddingInlineStart: Property.ScrollPaddingInlineStart<string | number> = "" as any
    scrollPaddingLeft: Property.ScrollPaddingLeft<string | number> = "" as any
    scrollPaddingRight: Property.ScrollPaddingRight<string | number> = "" as any
    scrollPaddingTop: Property.ScrollPaddingTop<string | number> = "" as any
    scrollSnapAlign: Property.ScrollSnapAlign = "" as any
    scrollSnapMarginBottom: Property.ScrollMarginBottom<string | number> = "" as any
    scrollSnapMarginLeft: Property.ScrollMarginLeft<string | number> = "" as any
    scrollSnapMarginRight: Property.ScrollMarginRight<string | number> = "" as any
    scrollSnapMarginTop: Property.ScrollMarginTop<string | number> = "" as any
    scrollSnapStop: Property.ScrollSnapStop = "" as any
    scrollSnapType: Property.ScrollSnapType = "" as any
    scrollTimelineAxis: Property.ScrollTimelineAxis = "" as any
    scrollTimelineName: Property.ScrollTimelineName = "" as any
    scrollbarColor: Property.ScrollbarColor = "" as any
    scrollbarGutter: Property.ScrollbarGutter = "" as any
    scrollbarWidth: Property.ScrollbarWidth = "" as any
    shapeImageThreshold: Property.ShapeImageThreshold = "" as any
    shapeMargin: Property.ShapeMargin<string | number> = "" as any
    shapeOutside: Property.ShapeOutside = "" as any
    tabSize: Property.TabSize<string | number> = "" as any
    tableLayout: Property.TableLayout = "" as any
    textAlign: Property.TextAlign = "" as any
    textAlignLast: Property.TextAlignLast = "" as any
    textCombineUpright: Property.TextCombineUpright = "" as any
    textDecorationColor: Property.TextDecorationColor = "" as any
    textDecorationLine: Property.TextDecorationLine = "" as any
    textDecorationSkip: Property.TextDecorationSkip = "" as any
    textDecorationSkipInk: Property.TextDecorationSkipInk = "" as any
    textDecorationStyle: Property.TextDecorationStyle = "" as any
    textDecorationThickness: Property.TextDecorationThickness<string | number> = "" as any
    textEmphasisColor: Property.TextEmphasisColor = "" as any
    textEmphasisPosition: Property.TextEmphasisPosition = "" as any
    textEmphasisStyle: Property.TextEmphasisStyle = "" as any
    textIndent: Property.TextIndent<string | number> = "" as any
    textJustify: Property.TextJustify = "" as any
    textOrientation: Property.TextOrientation = "" as any
    textOverflow: Property.TextOverflow = "" as any
    textRendering: Property.TextRendering = "" as any
    textShadow: Property.TextShadow = "" as any
    textSizeAdjust: Property.TextSizeAdjust = "" as any
    textTransform: Property.TextTransform = "" as any
    textUnderlineOffset: Property.TextUnderlineOffset<string | number> = "" as any
    textUnderlinePosition: Property.TextUnderlinePosition = "" as any
    top: Property.Top<string | number> = "" as any
    touchAction: Property.TouchAction = "" as any
    transform: Property.Transform = "" as any
    transformBox: Property.TransformBox = "" as any
    transformOrigin: Property.TransformOrigin<string | number> = "" as any
    transformStyle: Property.TransformStyle = "" as any
    transitionDelay: Property.TransitionDelay<string & {}> = "" as any
    transitionDuration: Property.TransitionDuration<string & {}> = "" as any
    transitionProperty: Property.TransitionProperty = "" as any
    transitionTimingFunction: Property.TransitionTimingFunction = "" as any
    translate: Property.Translate<string | number> = "" as any
    unicodeBidi: Property.UnicodeBidi = "" as any
    userSelect: Property.UserSelect = "" as any
    verticalAlign: Property.VerticalAlign<string | number> = "" as any
    viewTransitionName: Property.ViewTransitionName = "" as any
    visibility: Property.Visibility = "" as any
    whiteSpace: Property.WhiteSpace = "" as any
    widows: Property.Widows = "" as any
    width: Property.Width<string | number> = "" as any
    willChange: Property.WillChange = "" as any
    wordBreak: Property.WordBreak = "" as any
    wordSpacing: Property.WordSpacing<string | number> = "" as any
    wordWrap: Property.WordWrap = "" as any
    writingMode: Property.WritingMode = "" as any
    zIndex: Property.ZIndex = "" as any
    zoom: Property.Zoom = "" as any
    all: Globals = "" as any
    animation: Property.Animation<string & {}> = "" as any
    background: Property.Background<string | number> = "" as any
    backgroundPosition: Property.BackgroundPosition<string | number> = "" as any
    border: Property.Border<string | number> = "" as any
    borderBlock: Property.BorderBlock<string | number> = "" as any
    borderBlockEnd: Property.BorderBlockEnd<string | number> = "" as any
    borderBlockStart: Property.BorderBlockStart<string | number> = "" as any
    borderBottom: Property.BorderBottom<string | number> = "" as any
    borderColor: Property.BorderColor = "" as any
    borderImage: Property.BorderImage = "" as any
    borderInline: Property.BorderInline<string | number> = "" as any
    borderInlineEnd: Property.BorderInlineEnd<string | number> = "" as any
    borderInlineStart: Property.BorderInlineStart<string | number> = "" as any
    borderLeft: Property.BorderLeft<string | number> = "" as any
    borderRadius: Property.BorderRadius<string | number> = "" as any
    borderRight: Property.BorderRight<string | number> = "" as any
    borderStyle: Property.BorderStyle = "" as any
    borderTop: Property.BorderTop<string | number> = "" as any
    borderWidth: Property.BorderWidth<string | number> = "" as any
    caret: Property.Caret = "" as any
    columnRule: Property.ColumnRule<string | number> = "" as any
    columns: Property.Columns<string | number> = "" as any
    containIntrinsicSize: Property.ContainIntrinsicSize<string | number> = "" as any
    container: Property.Container = "" as any
    flex: Property.Flex<string | number> = "" as any
    flexFlow: Property.FlexFlow = "" as any
    font: Property.Font = "" as any
    gap: Property.Gap<string | number> = "" as any
    grid: Property.Grid = "" as any
    gridArea: Property.GridArea = "" as any
    gridColumn: Property.GridColumn = "" as any
    gridRow: Property.GridRow = "" as any
    gridTemplate: Property.GridTemplate = "" as any
    inset: Property.Inset<string | number> = "" as any
    insetBlock: Property.InsetBlock<string | number> = "" as any
    insetInline: Property.InsetInline<string | number> = "" as any
    lineClamp: Property.LineClamp = "" as any
    listStyle: Property.ListStyle = "" as any
    margin: Property.Margin<string | number> = "" as any
    marginBlock: Property.MarginBlock<string | number> = "" as any
    marginInline: Property.MarginInline<string | number> = "" as any
    mask: Property.Mask<string | number> = "" as any
    maskBorder: Property.MaskBorder = "" as any
    motion: Property.Offset<string | number> = "" as any
    offset: Property.Offset<string | number> = "" as any
    outline: Property.Outline<string | number> = "" as any
    overflow: Property.Overflow = "" as any
    overscrollBehavior: Property.OverscrollBehavior = "" as any
    padding: Property.Padding<string | number> = "" as any
    paddingBlock: Property.PaddingBlock<string | number> = "" as any
    paddingInline: Property.PaddingInline<string | number> = "" as any
    placeContent: Property.PlaceContent = "" as any
    placeItems: Property.PlaceItems = "" as any
    placeSelf: Property.PlaceSelf = "" as any
    scrollMargin: Property.ScrollMargin<string | number> = "" as any
    scrollMarginBlock: Property.ScrollMarginBlock<string | number> = "" as any
    scrollMarginInline: Property.ScrollMarginInline<string | number> = "" as any
    scrollPadding: Property.ScrollPadding<string | number> = "" as any
    scrollPaddingBlock: Property.ScrollPaddingBlock<string | number> = "" as any
    scrollPaddingInline: Property.ScrollPaddingInline<string | number> = "" as any
    scrollSnapMargin: Property.ScrollMargin<string | number> = "" as any
    scrollTimeline: Property.ScrollTimeline = "" as any
    textDecoration: Property.TextDecoration<string | number> = "" as any
    textEmphasis: Property.TextEmphasis = "" as any
    transition: Property.Transition<string & {}> = "" as any
    MozAnimationDelay: Property.AnimationDelay<string & {}> = "" as any
    MozAnimationDirection: Property.AnimationDirection = "" as any
    MozAnimationDuration: Property.AnimationDuration<string & {}> = "" as any
    MozAnimationFillMode: Property.AnimationFillMode = "" as any
    MozAnimationIterationCount: Property.AnimationIterationCount = "" as any
    MozAnimationName: Property.AnimationName = "" as any
    MozAnimationPlayState: Property.AnimationPlayState = "" as any
    MozAnimationTimingFunction: Property.AnimationTimingFunction = "" as any
    MozAppearance: Property.MozAppearance = "" as any
    MozBackfaceVisibility: Property.BackfaceVisibility = "" as any
    MozBinding: Property.MozBinding = "" as any
    MozBorderBottomColors: Property.MozBorderBottomColors = "" as any
    MozBorderEndColor: Property.BorderInlineEndColor = "" as any
    MozBorderEndStyle: Property.BorderInlineEndStyle = "" as any
    MozBorderEndWidth: Property.BorderInlineEndWidth<string | number> = "" as any
    MozBorderLeftColors: Property.MozBorderLeftColors = "" as any
    MozBorderRightColors: Property.MozBorderRightColors = "" as any
    MozBorderStartColor: Property.BorderInlineStartColor = "" as any
    MozBorderStartStyle: Property.BorderInlineStartStyle = "" as any
    MozBorderTopColors: Property.MozBorderTopColors = "" as any
    MozBoxSizing: Property.BoxSizing = "" as any
    MozColumnCount: Property.ColumnCount = "" as any
    MozColumnFill: Property.ColumnFill = "" as any
    MozColumnRuleColor: Property.ColumnRuleColor = "" as any
    MozColumnRuleStyle: Property.ColumnRuleStyle = "" as any
    MozColumnRuleWidth: Property.ColumnRuleWidth<string | number> = "" as any
    MozColumnWidth: Property.ColumnWidth<string | number> = "" as any
    MozContextProperties: Property.MozContextProperties = "" as any
    MozFontFeatureSettings: Property.FontFeatureSettings = "" as any
    MozFontLanguageOverride: Property.FontLanguageOverride = "" as any
    MozHyphens: Property.Hyphens = "" as any
    MozImageRegion: Property.MozImageRegion = "" as any
    MozMarginEnd: Property.MarginInlineEnd<string | number> = "" as any
    MozMarginStart: Property.MarginInlineStart<string | number> = "" as any
    MozOrient: Property.MozOrient = "" as any
    MozOsxFontSmoothing: Property.FontSmooth<string | number> = "" as any
    MozPaddingEnd: Property.PaddingInlineEnd<string | number> = "" as any
    MozPaddingStart: Property.PaddingInlineStart<string | number> = "" as any
    MozPerspective: Property.Perspective<string | number> = "" as any
    MozPerspectiveOrigin: Property.PerspectiveOrigin<string | number> = "" as any
    MozStackSizing: Property.MozStackSizing = "" as any
    MozTabSize: Property.TabSize<string | number> = "" as any
    MozTextBlink: Property.MozTextBlink = "" as any
    MozTextSizeAdjust: Property.TextSizeAdjust = "" as any
    MozTransformOrigin: Property.TransformOrigin<string | number> = "" as any
    MozTransformStyle: Property.TransformStyle = "" as any
    MozTransitionDelay: Property.TransitionDelay<string & {}> = "" as any
    MozTransitionDuration: Property.TransitionDuration<string & {}> = "" as any
    MozTransitionProperty: Property.TransitionProperty = "" as any
    MozTransitionTimingFunction: Property.TransitionTimingFunction = "" as any
    MozUserFocus: Property.MozUserFocus = "" as any
    MozUserModify: Property.MozUserModify = "" as any
    MozUserSelect: Property.UserSelect = "" as any
    MozWindowDragging: Property.MozWindowDragging = "" as any
    MozWindowShadow: Property.MozWindowShadow = "" as any
    msAccelerator: Property.MsAccelerator = "" as any
    msBlockProgression: Property.MsBlockProgression = "" as any
    msContentZoomChaining: Property.MsContentZoomChaining = "" as any
    msContentZoomLimitMax: Property.MsContentZoomLimitMax = "" as any
    msContentZoomLimitMin: Property.MsContentZoomLimitMin = "" as any
    msContentZoomSnapPoints: Property.MsContentZoomSnapPoints = "" as any
    msContentZoomSnapType: Property.MsContentZoomSnapType = "" as any
    msContentZooming: Property.MsContentZooming = "" as any
    msFilter: Property.MsFilter = "" as any
    msFlexDirection: Property.FlexDirection = "" as any
    msFlexPositive: Property.FlexGrow = "" as any
    msFlowFrom: Property.MsFlowFrom = "" as any
    msFlowInto: Property.MsFlowInto = "" as any
    msGridColumns: Property.MsGridColumns<string | number> = "" as any
    msGridRows: Property.MsGridRows<string | number> = "" as any
    msHighContrastAdjust: Property.MsHighContrastAdjust = "" as any
    msHyphenateLimitChars: Property.MsHyphenateLimitChars = "" as any
    msHyphenateLimitLines: Property.MsHyphenateLimitLines = "" as any
    msHyphenateLimitZone: Property.MsHyphenateLimitZone<string | number> = "" as any
    msHyphens: Property.Hyphens = "" as any
    msImeAlign: Property.MsImeAlign = "" as any
    msLineBreak: Property.LineBreak = "" as any
    msOrder: Property.Order = "" as any
    msOverflowStyle: Property.MsOverflowStyle = "" as any
    msOverflowX: Property.OverflowX = "" as any
    msOverflowY: Property.OverflowY = "" as any
    msScrollChaining: Property.MsScrollChaining = "" as any
    msScrollLimitXMax: Property.MsScrollLimitXMax<string | number> = "" as any
    msScrollLimitXMin: Property.MsScrollLimitXMin<string | number> = "" as any
    msScrollLimitYMax: Property.MsScrollLimitYMax<string | number> = "" as any
    msScrollLimitYMin: Property.MsScrollLimitYMin<string | number> = "" as any
    msScrollRails: Property.MsScrollRails = "" as any
    msScrollSnapPointsX: Property.MsScrollSnapPointsX = "" as any
    msScrollSnapPointsY: Property.MsScrollSnapPointsY = "" as any
    msScrollSnapType: Property.MsScrollSnapType = "" as any
    msScrollTranslation: Property.MsScrollTranslation = "" as any
    msScrollbar3dlightColor: Property.MsScrollbar3dlightColor = "" as any
    msScrollbarArrowColor: Property.MsScrollbarArrowColor = "" as any
    msScrollbarBaseColor: Property.MsScrollbarBaseColor = "" as any
    msScrollbarDarkshadowColor: Property.MsScrollbarDarkshadowColor = "" as any
    msScrollbarFaceColor: Property.MsScrollbarFaceColor = "" as any
    msScrollbarHighlightColor: Property.MsScrollbarHighlightColor = "" as any
    msScrollbarShadowColor: Property.MsScrollbarShadowColor = "" as any
    msScrollbarTrackColor: Property.MsScrollbarTrackColor = "" as any
    msTextAutospace: Property.MsTextAutospace = "" as any
    msTextCombineHorizontal: Property.TextCombineUpright = "" as any
    msTextOverflow: Property.TextOverflow = "" as any
    msTouchAction: Property.TouchAction = "" as any
    msTouchSelect: Property.MsTouchSelect = "" as any
    msTransform: Property.Transform = "" as any
    msTransformOrigin: Property.TransformOrigin<string | number> = "" as any
    msTransitionDelay: Property.TransitionDelay<string & {}> = "" as any
    msTransitionDuration: Property.TransitionDuration<string & {}> = "" as any
    msTransitionProperty: Property.TransitionProperty = "" as any
    msTransitionTimingFunction: Property.TransitionTimingFunction = "" as any
    msUserSelect: Property.MsUserSelect = "" as any
    msWordBreak: Property.WordBreak = "" as any
    msWrapFlow: Property.MsWrapFlow = "" as any
    msWrapMargin: Property.MsWrapMargin<string | number> = "" as any
    msWrapThrough: Property.MsWrapThrough = "" as any
    msWritingMode: Property.WritingMode = "" as any
    WebkitAlignContent: Property.AlignContent = "" as any
    WebkitAlignItems: Property.AlignItems = "" as any
    WebkitAlignSelf: Property.AlignSelf = "" as any
    WebkitAnimationDelay: Property.AnimationDelay<string & {}> = "" as any
    WebkitAnimationDirection: Property.AnimationDirection = "" as any
    WebkitAnimationDuration: Property.AnimationDuration<string & {}> = "" as any
    WebkitAnimationFillMode: Property.AnimationFillMode = "" as any
    WebkitAnimationIterationCount: Property.AnimationIterationCount = "" as any
    WebkitAnimationName: Property.AnimationName = "" as any
    WebkitAnimationPlayState: Property.AnimationPlayState = "" as any
    WebkitAnimationTimingFunction: Property.AnimationTimingFunction = "" as any
    WebkitAppearance: Property.WebkitAppearance = "" as any
    WebkitBackdropFilter: Property.BackdropFilter = "" as any
    WebkitBackfaceVisibility: Property.BackfaceVisibility = "" as any
    WebkitBackgroundClip: Property.BackgroundClip = "" as any
    WebkitBackgroundOrigin: Property.BackgroundOrigin = "" as any
    WebkitBackgroundSize: Property.BackgroundSize<string | number> = "" as any
    WebkitBorderBeforeColor: Property.WebkitBorderBeforeColor = "" as any
    WebkitBorderBeforeStyle: Property.WebkitBorderBeforeStyle = "" as any
    WebkitBorderBeforeWidth: Property.WebkitBorderBeforeWidth<string | number> = "" as any
    WebkitBorderBottomLeftRadius: Property.BorderBottomLeftRadius<string | number> = "" as any
    WebkitBorderBottomRightRadius: Property.BorderBottomRightRadius<string | number> = "" as any
    WebkitBorderImageSlice: Property.BorderImageSlice = "" as any
    WebkitBorderTopLeftRadius: Property.BorderTopLeftRadius<string | number> = "" as any
    WebkitBorderTopRightRadius: Property.BorderTopRightRadius<string | number> = "" as any
    WebkitBoxDecorationBreak: Property.BoxDecorationBreak = "" as any
    WebkitBoxReflect: Property.WebkitBoxReflect<string | number> = "" as any
    WebkitBoxShadow: Property.BoxShadow = "" as any
    WebkitBoxSizing: Property.BoxSizing = "" as any
    WebkitClipPath: Property.ClipPath = "" as any
    WebkitColumnCount: Property.ColumnCount = "" as any
    WebkitColumnFill: Property.ColumnFill = "" as any
    WebkitColumnRuleColor: Property.ColumnRuleColor = "" as any
    WebkitColumnRuleStyle: Property.ColumnRuleStyle = "" as any
    WebkitColumnRuleWidth: Property.ColumnRuleWidth<string | number> = "" as any
    WebkitColumnSpan: Property.ColumnSpan = "" as any
    WebkitColumnWidth: Property.ColumnWidth<string | number> = "" as any
    WebkitFilter: Property.Filter = "" as any
    WebkitFlexBasis: Property.FlexBasis<string | number> = "" as any
    WebkitFlexDirection: Property.FlexDirection = "" as any
    WebkitFlexGrow: Property.FlexGrow = "" as any
    WebkitFlexShrink: Property.FlexShrink = "" as any
    WebkitFlexWrap: Property.FlexWrap = "" as any
    WebkitFontFeatureSettings: Property.FontFeatureSettings = "" as any
    WebkitFontKerning: Property.FontKerning = "" as any
    WebkitFontSmoothing: Property.FontSmooth<string | number> = "" as any
    WebkitFontVariantLigatures: Property.FontVariantLigatures = "" as any
    WebkitHyphenateCharacter: Property.HyphenateCharacter = "" as any
    WebkitHyphens: Property.Hyphens = "" as any
    WebkitInitialLetter: Property.InitialLetter = "" as any
    WebkitJustifyContent: Property.JustifyContent = "" as any
    WebkitLineBreak: Property.LineBreak = "" as any
    WebkitLineClamp: Property.WebkitLineClamp = "" as any
    WebkitMarginEnd: Property.MarginInlineEnd<string | number> = "" as any
    WebkitMarginStart: Property.MarginInlineStart<string | number> = "" as any
    WebkitMaskAttachment: Property.WebkitMaskAttachment = "" as any
    WebkitMaskBoxImageOutset: Property.MaskBorderOutset<string | number> = "" as any
    WebkitMaskBoxImageRepeat: Property.MaskBorderRepeat = "" as any
    WebkitMaskBoxImageSlice: Property.MaskBorderSlice = "" as any
    WebkitMaskBoxImageSource: Property.MaskBorderSource = "" as any
    WebkitMaskBoxImageWidth: Property.MaskBorderWidth<string | number> = "" as any
    WebkitMaskClip: Property.WebkitMaskClip = "" as any
    WebkitMaskComposite: Property.WebkitMaskComposite = "" as any
    WebkitMaskImage: Property.WebkitMaskImage = "" as any
    WebkitMaskOrigin: Property.WebkitMaskOrigin = "" as any
    WebkitMaskPosition: Property.WebkitMaskPosition<string | number> = "" as any
    WebkitMaskPositionX: Property.WebkitMaskPositionX<string | number> = "" as any
    WebkitMaskPositionY: Property.WebkitMaskPositionY<string | number> = "" as any
    WebkitMaskRepeat: Property.WebkitMaskRepeat = "" as any
    WebkitMaskRepeatX: Property.WebkitMaskRepeatX = "" as any
    WebkitMaskRepeatY: Property.WebkitMaskRepeatY = "" as any
    WebkitMaskSize: Property.WebkitMaskSize<string | number> = "" as any
    WebkitMaxInlineSize: Property.MaxInlineSize<string | number> = "" as any
    WebkitOrder: Property.Order = "" as any
    WebkitOverflowScrolling: Property.WebkitOverflowScrolling = "" as any
    WebkitPaddingEnd: Property.PaddingInlineEnd<string | number> = "" as any
    WebkitPaddingStart: Property.PaddingInlineStart<string | number> = "" as any
    WebkitPerspective: Property.Perspective<string | number> = "" as any
    WebkitPerspectiveOrigin: Property.PerspectiveOrigin<string | number> = "" as any
    WebkitPrintColorAdjust: Property.PrintColorAdjust = "" as any
    WebkitRubyPosition: Property.RubyPosition = "" as any
    WebkitScrollSnapType: Property.ScrollSnapType = "" as any
    WebkitShapeMargin: Property.ShapeMargin<string | number> = "" as any
    WebkitTapHighlightColor: Property.WebkitTapHighlightColor = "" as any
    WebkitTextCombine: Property.TextCombineUpright = "" as any
    WebkitTextDecorationColor: Property.TextDecorationColor = "" as any
    WebkitTextDecorationLine: Property.TextDecorationLine = "" as any
    WebkitTextDecorationSkip: Property.TextDecorationSkip = "" as any
    WebkitTextDecorationStyle: Property.TextDecorationStyle = "" as any
    WebkitTextEmphasisColor: Property.TextEmphasisColor = "" as any
    WebkitTextEmphasisPosition: Property.TextEmphasisPosition = "" as any
    WebkitTextEmphasisStyle: Property.TextEmphasisStyle = "" as any
    WebkitTextFillColor: Property.WebkitTextFillColor = "" as any
    WebkitTextOrientation: Property.TextOrientation = "" as any
    WebkitTextSizeAdjust: Property.TextSizeAdjust = "" as any
    WebkitTextStrokeColor: Property.WebkitTextStrokeColor = "" as any
    WebkitTextStrokeWidth: Property.WebkitTextStrokeWidth<string | number> = "" as any
    WebkitTextUnderlinePosition: Property.TextUnderlinePosition = "" as any
    WebkitTouchCallout: Property.WebkitTouchCallout = "" as any
    WebkitTransform: Property.Transform = "" as any
    WebkitTransformOrigin: Property.TransformOrigin<string | number> = "" as any
    WebkitTransformStyle: Property.TransformStyle = "" as any
    WebkitTransitionDelay: Property.TransitionDelay<string & {}> = "" as any
    WebkitTransitionDuration: Property.TransitionDuration<string & {}> = "" as any
    WebkitTransitionProperty: Property.TransitionProperty = "" as any
    WebkitTransitionTimingFunction: Property.TransitionTimingFunction = "" as any
    WebkitUserModify: Property.WebkitUserModify = "" as any
    WebkitUserSelect: Property.UserSelect = "" as any
    WebkitWritingMode: Property.WritingMode = "" as any
    MozAnimation: Property.Animation<string & {}> = "" as any
    MozBorderImage: Property.BorderImage = "" as any
    MozColumnRule: Property.ColumnRule<string | number> = "" as any
    MozColumns: Property.Columns<string | number> = "" as any
    MozTransition: Property.Transition<string & {}> = "" as any
    msContentZoomLimit: Property.MsContentZoomLimit = "" as any
    msContentZoomSnap: Property.MsContentZoomSnap = "" as any
    msFlex: Property.Flex<string | number> = "" as any
    msScrollLimit: Property.MsScrollLimit = "" as any
    msScrollSnapX: Property.MsScrollSnapX = "" as any
    msScrollSnapY: Property.MsScrollSnapY = "" as any
    msTransition: Property.Transition<string & {}> = "" as any
    WebkitAnimation: Property.Animation<string & {}> = "" as any
    WebkitBorderBefore: Property.WebkitBorderBefore<string | number> = "" as any
    WebkitBorderImage: Property.BorderImage = "" as any
    WebkitBorderRadius: Property.BorderRadius<string | number> = "" as any
    WebkitColumnRule: Property.ColumnRule<string | number> = "" as any
    WebkitColumns: Property.Columns<string | number> = "" as any
    WebkitFlex: Property.Flex<string | number> = "" as any
    WebkitFlexFlow: Property.FlexFlow = "" as any
    WebkitMask: Property.WebkitMask<string | number> = "" as any
    WebkitMaskBoxImage: Property.MaskBorder = "" as any
    WebkitTextEmphasis: Property.TextEmphasis = "" as any
    WebkitTextStroke: Property.WebkitTextStroke<string | number> = "" as any
    WebkitTransition: Property.Transition<string & {}> = "" as any
    azimuth: Property.Azimuth = "" as any
    boxAlign: Property.BoxAlign = "" as any
    boxDirection: Property.BoxDirection = "" as any
    boxFlex: Property.BoxFlex = "" as any
    boxFlexGroup: Property.BoxFlexGroup = "" as any
    boxLines: Property.BoxLines = "" as any
    boxOrdinalGroup: Property.BoxOrdinalGroup = "" as any
    boxOrient: Property.BoxOrient = "" as any
    boxPack: Property.BoxPack = "" as any
    clip: Property.Clip = "" as any
    gridColumnGap: Property.GridColumnGap<string | number> = "" as any
    gridGap: Property.GridGap<string | number> = "" as any
    gridRowGap: Property.GridRowGap<string | number> = "" as any
    imeMode: Property.ImeMode = "" as any
    offsetBlock: Property.InsetBlock<string | number> = "" as any
    offsetBlockEnd: Property.InsetBlockEnd<string | number> = "" as any
    offsetBlockStart: Property.InsetBlockStart<string | number> = "" as any
    offsetInline: Property.InsetInline<string | number> = "" as any
    offsetInlineEnd: Property.InsetInlineEnd<string | number> = "" as any
    offsetInlineStart: Property.InsetInlineStart<string | number> = "" as any
    scrollSnapCoordinate: Property.ScrollSnapCoordinate<string | number> = "" as any
    scrollSnapDestination: Property.ScrollSnapDestination<string | number> = "" as any
    scrollSnapPointsX: Property.ScrollSnapPointsX = "" as any
    scrollSnapPointsY: Property.ScrollSnapPointsY = "" as any
    scrollSnapTypeX: Property.ScrollSnapTypeX = "" as any
    scrollSnapTypeY: Property.ScrollSnapTypeY = "" as any
    KhtmlBoxAlign: Property.BoxAlign = "" as any
    KhtmlBoxDirection: Property.BoxDirection = "" as any
    KhtmlBoxFlex: Property.BoxFlex = "" as any
    KhtmlBoxFlexGroup: Property.BoxFlexGroup = "" as any
    KhtmlBoxLines: Property.BoxLines = "" as any
    KhtmlBoxOrdinalGroup: Property.BoxOrdinalGroup = "" as any
    KhtmlBoxOrient: Property.BoxOrient = "" as any
    KhtmlBoxPack: Property.BoxPack = "" as any
    KhtmlLineBreak: Property.LineBreak = "" as any
    KhtmlOpacity: Property.Opacity = "" as any
    KhtmlUserSelect: Property.UserSelect = "" as any
    MozBackgroundClip: Property.BackgroundClip = "" as any
    MozBackgroundInlinePolicy: Property.BoxDecorationBreak = "" as any
    MozBackgroundOrigin: Property.BackgroundOrigin = "" as any
    MozBackgroundSize: Property.BackgroundSize<string | number> = "" as any
    MozBorderRadius: Property.BorderRadius<string | number> = "" as any
    MozBorderRadiusBottomleft: Property.BorderBottomLeftRadius<string | number> = "" as any
    MozBorderRadiusBottomright: Property.BorderBottomRightRadius<string | number> = "" as any
    MozBorderRadiusTopleft: Property.BorderTopLeftRadius<string | number> = "" as any
    MozBorderRadiusTopright: Property.BorderTopRightRadius<string | number> = "" as any
    MozBoxAlign: Property.BoxAlign = "" as any
    MozBoxDirection: Property.BoxDirection = "" as any
    MozBoxFlex: Property.BoxFlex = "" as any
    MozBoxOrdinalGroup: Property.BoxOrdinalGroup = "" as any
    MozBoxOrient: Property.BoxOrient = "" as any
    MozBoxPack: Property.BoxPack = "" as any
    MozBoxShadow: Property.BoxShadow = "" as any
    MozFloatEdge: Property.MozFloatEdge = "" as any
    MozForceBrokenImageIcon: Property.MozForceBrokenImageIcon = "" as any
    MozOpacity: Property.Opacity = "" as any
    MozOutline: Property.Outline<string | number> = "" as any
    MozOutlineColor: Property.OutlineColor = "" as any
    MozOutlineRadius: Property.MozOutlineRadius<string | number> = "" as any
    MozOutlineRadiusBottomleft: Property.MozOutlineRadiusBottomleft<string | number> = "" as any
    MozOutlineRadiusBottomright: Property.MozOutlineRadiusBottomright<string | number> = "" as any
    MozOutlineRadiusTopleft: Property.MozOutlineRadiusTopleft<string | number> = "" as any
    MozOutlineRadiusTopright: Property.MozOutlineRadiusTopright<string | number> = "" as any
    MozOutlineStyle: Property.OutlineStyle = "" as any
    MozOutlineWidth: Property.OutlineWidth<string | number> = "" as any
    MozTextAlignLast: Property.TextAlignLast = "" as any
    MozTextDecorationColor: Property.TextDecorationColor = "" as any
    MozTextDecorationLine: Property.TextDecorationLine = "" as any
    MozTextDecorationStyle: Property.TextDecorationStyle = "" as any
    MozUserInput: Property.MozUserInput = "" as any
    msImeMode: Property.ImeMode = "" as any
    OAnimation: Property.Animation<string & {}> = "" as any
    OAnimationDelay: Property.AnimationDelay<string & {}> = "" as any
    OAnimationDirection: Property.AnimationDirection = "" as any
    OAnimationDuration: Property.AnimationDuration<string & {}> = "" as any
    OAnimationFillMode: Property.AnimationFillMode = "" as any
    OAnimationIterationCount: Property.AnimationIterationCount = "" as any
    OAnimationName: Property.AnimationName = "" as any
    OAnimationPlayState: Property.AnimationPlayState = "" as any
    OAnimationTimingFunction: Property.AnimationTimingFunction = "" as any
    OBackgroundSize: Property.BackgroundSize<string | number> = "" as any
    OBorderImage: Property.BorderImage = "" as any
    OObjectFit: Property.ObjectFit = "" as any
    OObjectPosition: Property.ObjectPosition<string | number> = "" as any
    OTabSize: Property.TabSize<string | number> = "" as any
    OTextOverflow: Property.TextOverflow = "" as any
    OTransform: Property.Transform = "" as any
    OTransformOrigin: Property.TransformOrigin<string | number> = "" as any
    OTransition: Property.Transition<string & {}> = "" as any
    OTransitionDelay: Property.TransitionDelay<string & {}> = "" as any
    OTransitionDuration: Property.TransitionDuration<string & {}> = "" as any
    OTransitionProperty: Property.TransitionProperty = "" as any
    OTransitionTimingFunction: Property.TransitionTimingFunction = "" as any
    WebkitBoxAlign: Property.BoxAlign = "" as any
    WebkitBoxDirection: Property.BoxDirection = "" as any
    WebkitBoxFlex: Property.BoxFlex = "" as any
    WebkitBoxFlexGroup: Property.BoxFlexGroup = "" as any
    WebkitBoxLines: Property.BoxLines = "" as any
    WebkitBoxOrdinalGroup: Property.BoxOrdinalGroup = "" as any
    WebkitBoxOrient: Property.BoxOrient = "" as any
    WebkitBoxPack: Property.BoxPack = "" as any
    WebkitScrollSnapPointsX: Property.ScrollSnapPointsX = "" as any
    WebkitScrollSnapPointsY: Property.ScrollSnapPointsY = "" as any
    alignmentBaseline: Property.AlignmentBaseline = "" as any
    baselineShift: Property.BaselineShift<string | number> = "" as any
    clipRule: Property.ClipRule = "" as any
    colorInterpolation: Property.ColorInterpolation = "" as any
    colorRendering: Property.ColorRendering = "" as any
    dominantBaseline: Property.DominantBaseline = "" as any
    fill: Property.Fill = "" as any
    fillOpacity: Property.FillOpacity = "" as any
    fillRule: Property.FillRule = "" as any
    floodColor: Property.FloodColor = "" as any
    floodOpacity: Property.FloodOpacity = "" as any
    glyphOrientationVertical: Property.GlyphOrientationVertical = "" as any
    lightingColor: Property.LightingColor = "" as any
    marker: Property.Marker = "" as any
    markerEnd: Property.MarkerEnd = "" as any
    markerMid: Property.MarkerMid = "" as any
    markerStart: Property.MarkerStart = "" as any
    shapeRendering: Property.ShapeRendering = "" as any
    stopColor: Property.StopColor = "" as any
    stopOpacity: Property.StopOpacity = "" as any
    stroke: Property.Stroke = "" as any
    strokeDasharray: Property.StrokeDasharray<string | number> = "" as any
    strokeDashoffset: Property.StrokeDashoffset<string | number> = "" as any
    strokeLinecap: Property.StrokeLinecap = "" as any
    strokeLinejoin: Property.StrokeLinejoin = "" as any
    strokeMiterlimit: Property.StrokeMiterlimit = "" as any
    strokeOpacity: Property.StrokeOpacity = "" as any
    strokeWidth: Property.StrokeWidth<string | number> = "" as any
    textAnchor: Property.TextAnchor = "" as any
    vectorEffect: Property.VectorEffect = "" as any
}

export const allCssRulesObject = new AllCssRules()
